struct SG {
  char			c1[1];
  signed char		sc1[1][2];
  unsigned char		uc1[1][2][3];
  short			s1[1][2][3][4];
  signed short		ss1[1][2][3][4][5];
  unsigned short	us1[1];
  int			i1[1][2];
  signed int		si1[1][2][3];
  unsigned int		ui1[1][2][3][4];
  long			l1[1][2][3][4][5];
  signed long		sl1[1];
  unsigned long		ul1[1][2];
  float			f1[1][2][3];
  double		d1[1][2][3][4];
  long double		ld1[1][2][3][4][5];
  bool			b1[1];
  wchar_t		w1[1][2];
  long long		ll1[1][2][3];
  signed long long	sll1[1][2][3][4];
  unsigned long long	ull1[1][2][3][4][5];
}sgobj;

class CG : public SG {
 public:
  char			c2[1];
  signed char		sc2[1][2];
  unsigned char		uc2[1][2][3];
  short			s2[1][2][3][4];
  signed short		ss2[1][2][3][4][5];
  unsigned short	us2[1];
  int			i2[1][2];
  signed int		si2[1][2][3];
  unsigned int		ui2[1][2][3][4];
  long			l2[1][2][3][4][5];
  signed long		sl2[1];
  unsigned long		ul2[1][2];
  float			f2[1][2][3];
  double		d2[1][2][3][4];
  long double		ld2[1][2][3][4][5];
  bool			b2[1];
  wchar_t		w2[1][2];
  long long		ll2[1][2][3];
  signed long long	sll2[1][2][3][4];
  unsigned long long	ull2[1][2][3][4][5];
  struct CSG {
    char		c3[1];
    signed char		sc3[1][2];
    unsigned char	uc3[1][2][3];
    short		s3[1][2][3][4];
    signed short	ss3[1][2][3][4][5];
    unsigned short	us3[1];
    int			i3[1][2];
    signed int		si3[1][2][3];
    unsigned int	ui3[1][2][3][4];
    long		l3[1][2][3][4][5];
    signed long		sl3[1];
    unsigned long	ul3[1][2];
    float		f3[1][2][3];
    double		d3[1][2][3][4];
    long double		ld3[1][2][3][4][5];
    bool		b3[1];
    wchar_t		w3[1][2];
    long long		ll3[1][2][3];
    signed long long	sll3[1][2][3][4];
    unsigned long long	ull3[1][2][3][4][5];
  }csgobj;
}cgobj;

union UG {
  char			c4[1];
  signed char		sc4[1][2];
  unsigned char		uc4[1][2][3];
  short			s4[1][2][3][4];
  signed short		ss4[1][2][3][4][5];
  unsigned short	us4[1];
  int			i4[1][2];
  signed int		si4[1][2][3];
  unsigned int		ui4[1][2][3][4];
  long			l4[1][2][3][4][5];
  signed long		sl4[1];
  unsigned long		ul4[1][2];
  float			f4[1][2][3];
  double		d4[1][2][3][4];
  long double		ld4[1][2][3][4][5];
  bool			b4[1];
  wchar_t		w4[1][2];
  long long		ll4[1][2][3];
  signed long long	sll4[1][2][3][4];
  unsigned long long	ull4[1][2][3][4][5];
}ugobj;

char			(SG::*c01)[1] = &SG::c1;
signed char		(SG::*sc01)[1][2] = &SG::sc1;
unsigned char		(SG::*uc01)[1][2][3] = &SG::uc1;
short			(SG::*s01)[1][2][3][4] = &SG::s1;
signed short		(SG::*ss01)[1][2][3][4][5] = &SG::ss1;
unsigned short		(SG::*us01)[1] = &SG::us1;
int			(SG::*i01)[1][2] = &SG::i1;
signed int		(SG::*si01)[1][2][3] = &SG::si1;
unsigned int		(SG::*ui01)[1][2][3][4] = &SG::ui1;
long			(SG::*l01)[1][2][3][4][5] = &SG::l1;
signed long		(SG::*sl01)[1] = &SG::sl1;
unsigned long		(SG::*ul01)[1][2] = &SG::ul1;
float			(SG::*f01)[1][2][3] = &SG::f1;
double			(SG::*d01)[1][2][3][4] = &SG::d1;
long double		(SG::*ld01)[1][2][3][4][5] = &SG::ld1;
bool			(SG::*b01)[1] = &SG::b1;
wchar_t			(SG::*w01)[1][2] = &SG::w1;
long long		(SG::*ll01)[1][2][3] = &SG::ll1;
signed long long	(SG::*sll01)[1][2][3][4] = &SG::sll1;
unsigned long long	(SG::*ull01)[1][2][3][4][5] = &SG::ull1;

char			(CG::*c02)[1] = &CG::c2;
signed char		(CG::*sc02)[1][2] = &CG::sc2;
unsigned char		(CG::*uc02)[1][2][3] = &CG::uc2;
short			(CG::*s02)[1][2][3][4] = &CG::s2;
signed short		(CG::*ss02)[1][2][3][4][5] = &CG::ss2;
unsigned short		(CG::*us02)[1] = &CG::us2;
int			(CG::*i02)[1][2] = &CG::i2;
signed int		(CG::*si02)[1][2][3] = &CG::si2;
unsigned int		(CG::*ui02)[1][2][3][4] = &CG::ui2;
long			(CG::*l02)[1][2][3][4][5] = &CG::l2;
signed long		(CG::*sl02)[1] = &CG::sl2;
unsigned long		(CG::*ul02)[1][2] = &CG::ul2;
float			(CG::*f02)[1][2][3] = &CG::f2;
double			(CG::*d02)[1][2][3][4] = &CG::d2;
long double		(CG::*ld02)[1][2][3][4][5] = &CG::ld2;
bool			(CG::*b02)[1] = &CG::b2;
wchar_t			(CG::*w02)[1][2] = &CG::w2;
long long		(CG::*ll02)[1][2][3] = &CG::ll2;
signed long long	(CG::*sll02)[1][2][3][4] = &CG::sll2;
unsigned long long	(CG::*ull02)[1][2][3][4][5] = &CG::ull2;

char			(CG::CSG::*c03)[1] = &CG::CSG::c3;
signed char		(CG::CSG::*sc03)[1][2] = &CG::CSG::sc3;
unsigned char		(CG::CSG::*uc03)[1][2][3] = &CG::CSG::uc3;
short			(CG::CSG::*s03)[1][2][3][4] = &CG::CSG::s3;
signed short		(CG::CSG::*ss03)[1][2][3][4][5] = &CG::CSG::ss3;
unsigned short		(CG::CSG::*us03)[1] = &CG::CSG::us3;
int			(CG::CSG::*i03)[1][2] = &CG::CSG::i3;
signed int		(CG::CSG::*si03)[1][2][3] = &CG::CSG::si3;
unsigned int		(CG::CSG::*ui03)[1][2][3][4] = &CG::CSG::ui3;
long			(CG::CSG::*l03)[1][2][3][4][5] = &CG::CSG::l3;
signed long		(CG::CSG::*sl03)[1] = &CG::CSG::sl3;
unsigned long		(CG::CSG::*ul03)[1][2] = &CG::CSG::ul3;
float			(CG::CSG::*f03)[1][2][3] = &CG::CSG::f3;
double			(CG::CSG::*d03)[1][2][3][4] = &CG::CSG::d3;
long double		(CG::CSG::*ld03)[1][2][3][4][5] = &CG::CSG::ld3;
bool			(CG::CSG::*b03)[1] = &CG::CSG::b3;
wchar_t			(CG::CSG::*w03)[1][2] = &CG::CSG::w3;
long long		(CG::CSG::*ll03)[1][2][3] = &CG::CSG::ll3;
signed long long	(CG::CSG::*sll03)[1][2][3][4] = &CG::CSG::sll3;
unsigned long long	(CG::CSG::*ull03)[1][2][3][4][5] = &CG::CSG::ull3;

char			(UG::*c04)[1] = &UG::c4;
signed char		(UG::*sc04)[1][2] = &UG::sc4;
unsigned char		(UG::*uc04)[1][2][3] = &UG::uc4;
short			(UG::*s04)[1][2][3][4] = &UG::s4;
signed short		(UG::*ss04)[1][2][3][4][5] = &UG::ss4;
unsigned short		(UG::*us04)[1] = &UG::us4;
int			(UG::*i04)[1][2] = &UG::i4;
signed int		(UG::*si04)[1][2][3] = &UG::si4;
unsigned int		(UG::*ui04)[1][2][3][4] = &UG::ui4;
long			(UG::*l04)[1][2][3][4][5] = &UG::l4;
signed long		(UG::*sl04)[1] = &UG::sl4;
unsigned long		(UG::*ul04)[1][2] = &UG::ul4;
float			(UG::*f04)[1][2][3] = &UG::f4;
double			(UG::*d04)[1][2][3][4] = &UG::d4;
long double		(UG::*ld04)[1][2][3][4][5] = &UG::ld4;
bool			(UG::*b04)[1] = &UG::b4;
wchar_t			(UG::*w04)[1][2] = &UG::w4;
long long		(UG::*ll04)[1][2][3] = &UG::ll4;
signed long long	(UG::*sll04)[1][2][3][4] = &UG::sll4;
unsigned long long	(UG::*ull04)[1][2][3][4][5] = &UG::ull4;

#include <stdio.h>
int main()
{
  struct SL {
    char		c5[1];
    signed char		sc5[1][2];
    unsigned char	uc5[1][2][3];
    short		s5[1][2][3][4];
    signed short	ss5[1][2][3][4][5];
    unsigned short	us5[1];
    int			i5[1][2];
    signed int		si5[1][2][3];
    unsigned int	ui5[1][2][3][4];
    long		l5[1][2][3][4][5];
    signed long		sl5[1];
    unsigned long	ul5[1][2];
    float		f5[1][2][3];
    double		d5[1][2][3][4];
    long double		ld5[1][2][3][4][5];
    bool		b5[1];
    wchar_t		w5[1][2];
    long long		ll5[1][2][3];
    signed long long	sll5[1][2][3][4];
    unsigned long long	ull5[1][2][3][4][5];
  }slobj;

  class CL : public SL {
   public:
    char		c6[1];
    signed char		sc6[1][2];
    unsigned char	uc6[1][2][3];
    short		s6[1][2][3][4];
    signed short	ss6[1][2][3][4][5];
    unsigned short	us6[1];
    int			i6[1][2];
    signed int		si6[1][2][3];
    unsigned int	ui6[1][2][3][4];
    long		l6[1][2][3][4][5];
    signed long		sl6[1];
    unsigned long	ul6[1][2];
    float		f6[1][2][3];
    double		d6[1][2][3][4];
    long double		ld6[1][2][3][4][5];
    bool		b6[1];
    wchar_t		w6[1][2];
    long long		ll6[1][2][3];
    signed long long	sll6[1][2][3][4];
    unsigned long long	ull6[1][2][3][4][5];
    struct CSL {
      char		c7[1];
      signed char	sc7[1][2];
      unsigned char	uc7[1][2][3];
      short		s7[1][2][3][4];
      signed short	ss7[1][2][3][4][5];
      unsigned short	us7[1];
      int		i7[1][2];
      signed int	si7[1][2][3];
      unsigned int	ui7[1][2][3][4];
      long		l7[1][2][3][4][5];
      signed long	sl7[1];
      unsigned long	ul7[1][2];
      float		f7[1][2][3];
      double		d7[1][2][3][4];
      long double	ld7[1][2][3][4][5];
      bool		b7[1];
      wchar_t		w7[1][2];
      long long		ll7[1][2][3];
      signed long long	sll7[1][2][3][4];
      unsigned long long	ull7[1][2][3][4][5];
    }cslobj;
  }clobj;
  
  union UL {
    char		c8[1];
    signed char		sc8[1][2];
    unsigned char	uc8[1][2][3];
    short		s8[1][2][3][4];
    signed short	ss8[1][2][3][4][5];
    unsigned short	us8[1];
    int			i8[1][2];
    signed int		si8[1][2][3];
    unsigned int	ui8[1][2][3][4];
    long		l8[1][2][3][4][5];
    signed long		sl8[1];
    unsigned long	ul8[1][2];
    float		f8[1][2][3];
    double		d8[1][2][3][4];
    long double		ld8[1][2][3][4][5];
    bool		b8[1];
    wchar_t		w8[1][2];
    long long		ll8[1][2][3];
    signed long long	sll8[1][2][3][4];
    unsigned long long	ull8[1][2][3][4][5];
  }ulobj;

  char			(SL::*c05)[1] = &SL::c5;
  signed char		(SL::*sc05)[1][2] = &SL::sc5;
  unsigned char		(SL::*uc05)[1][2][3] = &SL::uc5;
  short			(SL::*s05)[1][2][3][4] = &SL::s5;
  signed short		(SL::*ss05)[1][2][3][4][5] = &SL::ss5;
  unsigned short	(SL::*us05)[1] = &SL::us5;
  int			(SL::*i05)[1][2] = &SL::i5;
  signed int		(SL::*si05)[1][2][3] = &SL::si5;
  unsigned int		(SL::*ui05)[1][2][3][4] = &SL::ui5;
  long			(SL::*l05)[1][2][3][4][5] = &SL::l5;
  signed long		(SL::*sl05)[1] = &SL::sl5;
  unsigned long		(SL::*ul05)[1][2] = &SL::ul5;
  float			(SL::*f05)[1][2][3] = &SL::f5;
  double		(SL::*d05)[1][2][3][4] = &SL::d5;
  long double		(SL::*ld05)[1][2][3][4][5] = &SL::ld5;
  bool			(SL::*b05)[1] = &SL::b5;
  wchar_t		(SL::*w05)[1][2] = &SL::w5;
  long long		(SL::*ll05)[1][2][3] = &SL::ll5;
  signed long long	(SL::*sll05)[1][2][3][4] = &SL::sll5;
  unsigned long long	(SL::*ull05)[1][2][3][4][5] = &SL::ull5;

  char			(CL::*c06)[1] = &CL::c6;
  signed char		(CL::*sc06)[1][2] = &CL::sc6;
  unsigned char		(CL::*uc06)[1][2][3] = &CL::uc6;
  short			(CL::*s06)[1][2][3][4] = &CL::s6;
  signed short		(CL::*ss06)[1][2][3][4][5] = &CL::ss6;
  unsigned short	(CL::*us06)[1] = &CL::us6;
  int			(CL::*i06)[1][2] = &CL::i6;
  signed int		(CL::*si06)[1][2][3] = &CL::si6;
  unsigned int		(CL::*ui06)[1][2][3][4] = &CL::ui6;
  long			(CL::*l06)[1][2][3][4][5] = &CL::l6;
  signed long		(CL::*sl06)[1] = &CL::sl6;
  unsigned long		(CL::*ul06)[1][2] = &CL::ul6;
  float			(CL::*f06)[1][2][3] = &CL::f6;
  double		(CL::*d06)[1][2][3][4] = &CL::d6;
  long double		(CL::*ld06)[1][2][3][4][5] = &CL::ld6;
  bool			(CL::*b06)[1] = &CL::b6;
  wchar_t		(CL::*w06)[1][2] = &CL::w6;
  long long		(CL::*ll06)[1][2][3] = &CL::ll6;
  signed long long	(CL::*sll06)[1][2][3][4] = &CL::sll6;
  unsigned long long	(CL::*ull06)[1][2][3][4][5] = &CL::ull6;

  char			(CL::CSL::*c07)[1] = &CL::CSL::c7;
  signed char		(CL::CSL::*sc07)[1][2] = &CL::CSL::sc7;
  unsigned char		(CL::CSL::*uc07)[1][2][3] = &CL::CSL::uc7;
  short			(CL::CSL::*s07)[1][2][3][4] = &CL::CSL::s7;
  signed short		(CL::CSL::*ss07)[1][2][3][4][5] = &CL::CSL::ss7;
  unsigned short	(CL::CSL::*us07)[1] = &CL::CSL::us7;
  int			(CL::CSL::*i07)[1][2] = &CL::CSL::i7;
  signed int		(CL::CSL::*si07)[1][2][3] = &CL::CSL::si7;
  unsigned int		(CL::CSL::*ui07)[1][2][3][4] = &CL::CSL::ui7;
  long			(CL::CSL::*l07)[1][2][3][4][5] = &CL::CSL::l7;
  signed long		(CL::CSL::*sl07)[1] = &CL::CSL::sl7;
  unsigned long		(CL::CSL::*ul07)[1][2] = &CL::CSL::ul7;
  float			(CL::CSL::*f07)[1][2][3] = &CL::CSL::f7;
  double		(CL::CSL::*d07)[1][2][3][4] = &CL::CSL::d7;
  long double		(CL::CSL::*ld07)[1][2][3][4][5] = &CL::CSL::ld7;
  bool			(CL::CSL::*b07)[1] = &CL::CSL::b7;
  wchar_t		(CL::CSL::*w07)[1][2] = &CL::CSL::w7;
  long long		(CL::CSL::*ll07)[1][2][3] = &CL::CSL::ll7;
  signed long long	(CL::CSL::*sll07)[1][2][3][4] = &CL::CSL::sll7;
  unsigned long long	(CL::CSL::*ull07)[1][2][3][4][5] = &CL::CSL::ull7;

  char			(UL::*c08)[1] = &UL::c8;
  signed char		(UL::*sc08)[1][2] = &UL::sc8;
  unsigned char		(UL::*uc08)[1][2][3] = &UL::uc8;
  short			(UL::*s08)[1][2][3][4] = &UL::s8;
  signed short		(UL::*ss08)[1][2][3][4][5] = &UL::ss8;
  unsigned short	(UL::*us08)[1] = &UL::us8;
  int			(UL::*i08)[1][2] = &UL::i8;
  signed int		(UL::*si08)[1][2][3] = &UL::si8;
  unsigned int		(UL::*ui08)[1][2][3][4] = &UL::ui8;
  long			(UL::*l08)[1][2][3][4][5] = &UL::l8;
  signed long		(UL::*sl08)[1] = &UL::sl8;
  unsigned long		(UL::*ul08)[1][2] = &UL::ul8;
  float			(UL::*f08)[1][2][3] = &UL::f8;
  double		(UL::*d08)[1][2][3][4] = &UL::d8;
  long double		(UL::*ld08)[1][2][3][4][5] = &UL::ld8;
  bool			(UL::*b08)[1] = &UL::b8;
  wchar_t		(UL::*w08)[1][2] = &UL::w8;
  long long		(UL::*ll08)[1][2][3] = &UL::ll8;
  signed long long	(UL::*sll08)[1][2][3][4] = &UL::sll8;
  unsigned long long	(UL::*ull08)[1][2][3][4][5] = &UL::ull8;

  (sgobj.*c01)[0] = 0;
  (sgobj.*sc01)[0][0] = 0;
  (sgobj.*uc01)[0][0][0] = 0;
  (sgobj.*s01)[0][0][0][0] = 0;
  (sgobj.*ss01)[0][0][0][0][0] = 0;
  (sgobj.*us01)[0] = 0;
  (sgobj.*i01)[0][0] = 0;
  (sgobj.*si01)[0][0][0] = 0;
  (sgobj.*ui01)[0][0][0][0] = 0;
  (sgobj.*l01)[0][0][0][0][0] = 0;
  (sgobj.*sl01)[0] = 0;
  (sgobj.*ul01)[0][0] = 0;
  (sgobj.*f01)[0][0][0] = 0;
  (sgobj.*d01)[0][0][0][0] = 0;
  (sgobj.*ld01)[0][0][0][0][0] = 0;
  (sgobj.*b01)[0] = 0;
  (sgobj.*w01)[0][0] = 0;
  (sgobj.*ll01)[0][0][0] = 0;
  (sgobj.*sll01)[0][0][0][0] = 0;
  (sgobj.*ull01)[0][0][0][0][0] = 0;

  (cgobj.*c02)[0] = 0;
  (cgobj.*sc02)[0][0] = 0;
  (cgobj.*uc02)[0][0][0] = 0;
  (cgobj.*s02)[0][0][0][0] = 0;
  (cgobj.*ss02)[0][0][0][0][0] = 0;
  (cgobj.*us02)[0] = 0;
  (cgobj.*i02)[0][0] = 0;
  (cgobj.*si02)[0][0][0] = 0;
  (cgobj.*ui02)[0][0][0][0] = 0;
  (cgobj.*l02)[0][0][0][0][0] = 0;
  (cgobj.*sl02)[0] = 0;
  (cgobj.*ul02)[0][0] = 0;
  (cgobj.*f02)[0][0][0] = 0;
  (cgobj.*d02)[0][0][0][0] = 0;
  (cgobj.*ld02)[0][0][0][0][0] = 0;
  (cgobj.*b02)[0] = 0;
  (cgobj.*w02)[0][0] = 0;
  (cgobj.*ll02)[0][0][0] = 0;
  (cgobj.*sll02)[0][0][0][0] = 0;
  (cgobj.*ull02)[0][0][0][0][0] = 0;

  (cgobj.csgobj.*c03)[0] = 0;
  (cgobj.csgobj.*sc03)[0][0] = 0;
  (cgobj.csgobj.*uc03)[0][0][0] = 0;
  (cgobj.csgobj.*s03)[0][0][0][0] = 0;
  (cgobj.csgobj.*ss03)[0][0][0][0][0] = 0;
  (cgobj.csgobj.*us03)[0] = 0;
  (cgobj.csgobj.*i03)[0][0] = 0;
  (cgobj.csgobj.*si03)[0][0][0] = 0;
  (cgobj.csgobj.*ui03)[0][0][0][0] = 0;
  (cgobj.csgobj.*l03)[0][0][0][0][0] = 0;
  (cgobj.csgobj.*sl03)[0] = 0;
  (cgobj.csgobj.*ul03)[0][0] = 0;
  (cgobj.csgobj.*f03)[0][0][0] = 0;
  (cgobj.csgobj.*d03)[0][0][0][0] = 0;
  (cgobj.csgobj.*ld03)[0][0][0][0][0] = 0;
  (cgobj.csgobj.*b03)[0] = 0;
  (cgobj.csgobj.*w03)[0][0] = 0;
  (cgobj.csgobj.*ll03)[0][0][0] = 0;
  (cgobj.csgobj.*sll03)[0][0][0][0] = 0;
  (cgobj.csgobj.*ull03)[0][0][0][0][0] = 0;

  (ugobj.*c04)[0] = 0;
  (ugobj.*sc04)[0][0] = 0;
  (ugobj.*uc04)[0][0][0] = 0;
  (ugobj.*s04)[0][0][0][0] = 0;
  (ugobj.*ss04)[0][0][0][0][0] = 0;
  (ugobj.*us04)[0] = 0;
  (ugobj.*i04)[0][0] = 0;
  (ugobj.*si04)[0][0][0] = 0;
  (ugobj.*ui04)[0][0][0][0] = 0;
  (ugobj.*l04)[0][0][0][0][0] = 0;
  (ugobj.*sl04)[0] = 0;
  (ugobj.*ul04)[0][0] = 0;
  (ugobj.*f04)[0][0][0] = 0;
  (ugobj.*d04)[0][0][0][0] = 0;
  (ugobj.*ld04)[0][0][0][0][0] = 0;
  (ugobj.*b04)[0] = 0;
  (ugobj.*w04)[0][0] = 0;
  (ugobj.*ll04)[0][0][0] = 0;
  (ugobj.*sll04)[0][0][0][0] = 0;
  (ugobj.*ull04)[0][0][0][0][0] = 0;

  (slobj.*c05)[0] = 0;
  (slobj.*sc05)[0][0] = 0;
  (slobj.*uc05)[0][0][0] = 0;
  (slobj.*s05)[0][0][0][0] = 0;
  (slobj.*ss05)[0][0][0][0][0] = 0;
  (slobj.*us05)[0] = 0;
  (slobj.*i05)[0][0] = 0;
  (slobj.*si05)[0][0][0] = 0;
  (slobj.*ui05)[0][0][0][0] = 0;
  (slobj.*l05)[0][0][0][0][0] = 0;
  (slobj.*sl05)[0] = 0;
  (slobj.*ul05)[0][0] = 0;
  (slobj.*f05)[0][0][0] = 0;
  (slobj.*d05)[0][0][0][0] = 0;
  (slobj.*ld05)[0][0][0][0][0] = 0;
  (slobj.*b05)[0] = 0;
  (slobj.*w05)[0][0] = 0;
  (slobj.*ll05)[0][0][0] = 0;
  (slobj.*sll05)[0][0][0][0] = 0;
  (slobj.*ull05)[0][0][0][0][0] = 0;

  (clobj.*c06)[0] = 0;
  (clobj.*sc06)[0][0] = 0;
  (clobj.*uc06)[0][0][0] = 0;
  (clobj.*s06)[0][0][0][0] = 0;
  (clobj.*ss06)[0][0][0][0][0] = 0;
  (clobj.*us06)[0] = 0;
  (clobj.*i06)[0][0] = 0;
  (clobj.*si06)[0][0][0] = 0;
  (clobj.*ui06)[0][0][0][0] = 0;
  (clobj.*l06)[0][0][0][0][0] = 0;
  (clobj.*sl06)[0] = 0;
  (clobj.*ul06)[0][0] = 0;
  (clobj.*f06)[0][0][0] = 0;
  (clobj.*d06)[0][0][0][0] = 0;
  (clobj.*ld06)[0][0][0][0][0] = 0;
  (clobj.*b06)[0] = 0;
  (clobj.*w06)[0][0] = 0;
  (clobj.*ll06)[0][0][0] = 0;
  (clobj.*sll06)[0][0][0][0] = 0;
  (clobj.*ull06)[0][0][0][0][0] = 0;

  (clobj.cslobj.*c07)[0] = 0;
  (clobj.cslobj.*sc07)[0][0] = 0;
  (clobj.cslobj.*uc07)[0][0][0] = 0;
  (clobj.cslobj.*s07)[0][0][0][0] = 0;
  (clobj.cslobj.*ss07)[0][0][0][0][0] = 0;
  (clobj.cslobj.*us07)[0] = 0;
  (clobj.cslobj.*i07)[0][0] = 0;
  (clobj.cslobj.*si07)[0][0][0] = 0;
  (clobj.cslobj.*ui07)[0][0][0][0] = 0;
  (clobj.cslobj.*l07)[0][0][0][0][0] = 0;
  (clobj.cslobj.*sl07)[0] = 0;
  (clobj.cslobj.*ul07)[0][0] = 0;
  (clobj.cslobj.*f07)[0][0][0] = 0;
  (clobj.cslobj.*d07)[0][0][0][0] = 0;
  (clobj.cslobj.*ld07)[0][0][0][0][0] = 0;
  (clobj.cslobj.*b07)[0] = 0;
  (clobj.cslobj.*w07)[0][0] = 0;
  (clobj.cslobj.*ll07)[0][0][0] = 0;
  (clobj.cslobj.*sll07)[0][0][0][0] = 0;
  (clobj.cslobj.*ull07)[0][0][0][0][0] = 0;

  (ulobj.*c08)[0] = 0;
  (ulobj.*sc08)[0][0] = 0;
  (ulobj.*uc08)[0][0][0] = 0;
  (ulobj.*s08)[0][0][0][0] = 0;
  (ulobj.*ss08)[0][0][0][0][0] = 0;
  (ulobj.*us08)[0] = 0;
  (ulobj.*i08)[0][0] = 0;
  (ulobj.*si08)[0][0][0] = 0;
  (ulobj.*ui08)[0][0][0][0] = 0;
  (ulobj.*l08)[0][0][0][0][0] = 0;
  (ulobj.*sl08)[0] = 0;
  (ulobj.*ul08)[0][0] = 0;
  (ulobj.*f08)[0][0][0] = 0;
  (ulobj.*d08)[0][0][0][0] = 0;
  (ulobj.*ld08)[0][0][0][0][0] = 0;
  (ulobj.*b08)[0] = 0;
  (ulobj.*w08)[0][0] = 0;
  (ulobj.*ll08)[0][0][0] = 0;
  (ulobj.*sll08)[0][0][0][0] = 0;
  (ulobj.*ull08)[0][0][0][0][0] = 0;

  puts("ok");
}
