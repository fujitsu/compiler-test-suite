MODULE Fake1D

  INTEGER, PARAMETER :: dp = 8
  REAL(dp), POINTER :: xp(:), pp(:)
  INTEGER(4) :: fptr

CONTAINS

  REAL(dp) FUNCTION f1 (lambda)
    real(dp), intent(in) :: lambda
    INTERFACE
       REAL(8) FUNCTION CallIt (x, f)    
         INTEGER, PARAMETER :: dp = 8
         REAL(dp), INTENT(in) :: x(:)
         INTEGER(4), INTENT(in) :: f
       END FUNCTION CallIt
    END INTERFACE

    f1 = CallIt(xp+lambda*pp,%VAL(fptr))
  END FUNCTION f1

  SUBROUTINE FF (x, f)
    REAL(dp), INTENT(in), TARGET :: x(:)
    INTERFACE
       FUNCTION f(x)
         INTEGER, PARAMETER :: dp = 8
         REAL(dp) :: x(:)
         REAL(dp) :: f
       END FUNCTION f
    END INTERFACE
    real(dp) :: a
    xp => x
    pp => x
    fptr = LOC(f)

    DO I = 1, 3
       write(1,*)f1(REAL(i,dp))
    END DO
    rewind 1

  END SUBROUTINE FF

END MODULE Fake1D

REAL(8) FUNCTION CallIt (x, f)    
  INTEGER, PARAMETER :: dp = 8
  REAL(dp), INTENT(in) :: x(:)
  INTERFACE
     FUNCTION f(x)
       INTEGER, PARAMETER :: dp = 8
       REAL(dp) :: x(:)
       REAL(dp) :: f
     END FUNCTION f
  END INTERFACE
  CallIt = f(x)
END FUNCTION CallIt

MODULE MyF
CONTAINS
  FUNCTION fn(x)
    INTEGER, PARAMETER :: dp = 8
    REAL(dp) :: x(:)
    REAL(dp) :: fn
    fn = SUM(x)
  END FUNCTION fn
END MODULE MyF

PROGRAM Test
  USE MyF
  USE Fake1D
  INTEGER :: I

  CALL FF( REAL( (/ (I,I=1,4) /),8), fn)
print *,'pass'
END PROGRAM Test
