      call test01()
      print *,'pass'
      end
      subroutine test01()
      integer*1 ,parameter :: a1=7
      integer*2 ,parameter :: a2=7
      integer*4 ,parameter :: a4=7
      integer*8 ,parameter :: a8=7
      integer*1 ,parameter :: b1=2
      integer*2 ,parameter :: b2=2
      integer*4 ,parameter :: b4=2
      integer*8 ,parameter :: b8=2
      integer*1 ,parameter :: c1=2
      integer*2 ,parameter :: c2=2
      integer*4 ,parameter :: c4=2
      integer*8 ,parameter :: c8=2
      integer*1 ,parameter :: e1=0
      integer*2 ,parameter :: e2=0
      integer*4 ,parameter :: e4=0
      integer*8 ,parameter :: e8=0
      integer*1  :: d1=6
      integer*2  :: d2=6
      integer*4  :: d4=6
      integer*8  :: d8=6

      call mvbits(a1,b1,c1,d1,e1)
      call mvbits(a1,b1,c1,d1,e2)
      call mvbits(a1,b1,c1,d1,e4)
      call mvbits(a1,b1,c1,d1,e8)
      call mvbits(a1,b1,c2,d1,e1)
      call mvbits(a1,b1,c2,d1,e2)
      call mvbits(a1,b1,c2,d1,e4)
      call mvbits(a1,b1,c2,d1,e8)
      call mvbits(a1,b1,c4,d1,e1)
      call mvbits(a1,b1,c4,d1,e2)
      call mvbits(a1,b1,c4,d1,e4)
      call mvbits(a1,b1,c4,d1,e8)
      call mvbits(a1,b1,c8,d1,e1)
      call mvbits(a1,b1,c8,d1,e2)
      call mvbits(a1,b1,c8,d1,e4)
      call mvbits(a1,b1,c8,d1,e8)
      call mvbits(a1,b2,c1,d1,e1)
      call mvbits(a1,b2,c1,d1,e2)
      call mvbits(a1,b2,c1,d1,e4)
      call mvbits(a1,b2,c1,d1,e8)
      call mvbits(a1,b2,c2,d1,e1)
      call mvbits(a1,b2,c2,d1,e2)
      call mvbits(a1,b2,c2,d1,e4)
      call mvbits(a1,b2,c2,d1,e8)
      call mvbits(a1,b2,c4,d1,e1)
      call mvbits(a1,b2,c4,d1,e2)
      call mvbits(a1,b2,c4,d1,e4)
      call mvbits(a1,b2,c4,d1,e8)
      call mvbits(a1,b2,c8,d1,e1)
      call mvbits(a1,b2,c8,d1,e2)
      call mvbits(a1,b2,c8,d1,e4)
      call mvbits(a1,b2,c8,d1,e8)
      call mvbits(a1,b4,c1,d1,e1)
      call mvbits(a1,b4,c1,d1,e2)
      call mvbits(a1,b4,c1,d1,e4)
      call mvbits(a1,b4,c1,d1,e8)
      call mvbits(a1,b4,c2,d1,e1)
      call mvbits(a1,b4,c2,d1,e2)
      call mvbits(a1,b4,c2,d1,e4)
      call mvbits(a1,b4,c2,d1,e8)
      call mvbits(a1,b4,c4,d1,e1)
      call mvbits(a1,b4,c4,d1,e2)
      call mvbits(a1,b4,c4,d1,e4)
      call mvbits(a1,b4,c4,d1,e8)
      call mvbits(a1,b4,c8,d1,e1)
      call mvbits(a1,b4,c8,d1,e2)
      call mvbits(a1,b4,c8,d1,e4)
      call mvbits(a1,b4,c8,d1,e8)
      call mvbits(a1,b8,c1,d1,e1)
      call mvbits(a1,b8,c1,d1,e2)
      call mvbits(a1,b8,c1,d1,e4)
      call mvbits(a1,b8,c1,d1,e8)
      call mvbits(a1,b8,c2,d1,e1)
      call mvbits(a1,b8,c2,d1,e2)
      call mvbits(a1,b8,c2,d1,e4)
      call mvbits(a1,b8,c2,d1,e8)
      call mvbits(a1,b8,c4,d1,e1)
      call mvbits(a1,b8,c4,d1,e2)
      call mvbits(a1,b8,c4,d1,e4)
      call mvbits(a1,b8,c4,d1,e8)
      call mvbits(a1,b8,c8,d1,e1)
      call mvbits(a1,b8,c8,d1,e2)
      call mvbits(a1,b8,c8,d1,e4)
      call mvbits(a1,b8,c8,d1,e8)

      call mvbits(a2,b1,c1,d2,e1)
      call mvbits(a2,b1,c1,d2,e2)
      call mvbits(a2,b1,c1,d2,e4)
      call mvbits(a2,b1,c1,d2,e8)
      call mvbits(a2,b1,c2,d2,e1)
      call mvbits(a2,b1,c2,d2,e2)
      call mvbits(a2,b1,c2,d2,e4)
      call mvbits(a2,b1,c2,d2,e8)
      call mvbits(a2,b1,c4,d2,e1)
      call mvbits(a2,b1,c4,d2,e2)
      call mvbits(a2,b1,c4,d2,e4)
      call mvbits(a2,b1,c4,d2,e8)
      call mvbits(a2,b1,c8,d2,e1)
      call mvbits(a2,b1,c8,d2,e2)
      call mvbits(a2,b1,c8,d2,e4)
      call mvbits(a2,b1,c8,d2,e8)
      call mvbits(a2,b2,c1,d2,e1)
      call mvbits(a2,b2,c1,d2,e2)
      call mvbits(a2,b2,c1,d2,e4)
      call mvbits(a2,b2,c1,d2,e8)
      call mvbits(a2,b2,c2,d2,e1)
      call mvbits(a2,b2,c2,d2,e2)
      call mvbits(a2,b2,c2,d2,e4)
      call mvbits(a2,b2,c2,d2,e8)
      call mvbits(a2,b2,c4,d2,e1)
      call mvbits(a2,b2,c4,d2,e2)
      call mvbits(a2,b2,c4,d2,e4)
      call mvbits(a2,b2,c4,d2,e8)
      call mvbits(a2,b2,c8,d2,e1)
      call mvbits(a2,b2,c8,d2,e2)
      call mvbits(a2,b2,c8,d2,e4)
      call mvbits(a2,b2,c8,d2,e8)
      call mvbits(a2,b4,c1,d2,e1)
      call mvbits(a2,b4,c1,d2,e2)
      call mvbits(a2,b4,c1,d2,e4)
      call mvbits(a2,b4,c1,d2,e8)
      call mvbits(a2,b4,c2,d2,e1)
      call mvbits(a2,b4,c2,d2,e2)
      call mvbits(a2,b4,c2,d2,e4)
      call mvbits(a2,b4,c2,d2,e8)
      call mvbits(a2,b4,c4,d2,e1)
      call mvbits(a2,b4,c4,d2,e2)
      call mvbits(a2,b4,c4,d2,e4)
      call mvbits(a2,b4,c4,d2,e8)
      call mvbits(a2,b4,c8,d2,e1)
      call mvbits(a2,b4,c8,d2,e2)
      call mvbits(a2,b4,c8,d2,e4)
      call mvbits(a2,b4,c8,d2,e8)
      call mvbits(a2,b8,c1,d2,e1)
      call mvbits(a2,b8,c1,d2,e2)
      call mvbits(a2,b8,c1,d2,e4)
      call mvbits(a2,b8,c1,d2,e8)
      call mvbits(a2,b8,c2,d2,e1)
      call mvbits(a2,b8,c2,d2,e2)
      call mvbits(a2,b8,c2,d2,e4)
      call mvbits(a2,b8,c2,d2,e8)
      call mvbits(a2,b8,c4,d2,e1)
      call mvbits(a2,b8,c4,d2,e2)
      call mvbits(a2,b8,c4,d2,e4)
      call mvbits(a2,b8,c4,d2,e8)
      call mvbits(a2,b8,c8,d2,e1)
      call mvbits(a2,b8,c8,d2,e2)
      call mvbits(a2,b8,c8,d2,e4)
      call mvbits(a2,b8,c8,d2,e8)

      call mvbits(a4,b1,c1,d4,e1)
      call mvbits(a4,b1,c1,d4,e2)
      call mvbits(a4,b1,c1,d4,e4)
      call mvbits(a4,b1,c1,d4,e8)
      call mvbits(a4,b1,c2,d4,e1)
      call mvbits(a4,b1,c2,d4,e2)
      call mvbits(a4,b1,c2,d4,e4)
      call mvbits(a4,b1,c2,d4,e8)
      call mvbits(a4,b1,c4,d4,e1)
      call mvbits(a4,b1,c4,d4,e2)
      call mvbits(a4,b1,c4,d4,e4)
      call mvbits(a4,b1,c4,d4,e8)
      call mvbits(a4,b1,c8,d4,e1)
      call mvbits(a4,b1,c8,d4,e2)
      call mvbits(a4,b1,c8,d4,e4)
      call mvbits(a4,b1,c8,d4,e8)
      call mvbits(a4,b2,c1,d4,e1)
      call mvbits(a4,b2,c1,d4,e2)
      call mvbits(a4,b2,c1,d4,e4)
      call mvbits(a4,b2,c1,d4,e8)
      call mvbits(a4,b2,c2,d4,e1)
      call mvbits(a4,b2,c2,d4,e2)
      call mvbits(a4,b2,c2,d4,e4)
      call mvbits(a4,b2,c2,d4,e8)
      call mvbits(a4,b2,c4,d4,e1)
      call mvbits(a4,b2,c4,d4,e2)
      call mvbits(a4,b2,c4,d4,e4)
      call mvbits(a4,b2,c4,d4,e8)
      call mvbits(a4,b2,c8,d4,e1)
      call mvbits(a4,b2,c8,d4,e2)
      call mvbits(a4,b2,c8,d4,e4)
      call mvbits(a4,b2,c8,d4,e8)
      call mvbits(a4,b4,c1,d4,e1)
      call mvbits(a4,b4,c1,d4,e2)
      call mvbits(a4,b4,c1,d4,e4)
      call mvbits(a4,b4,c1,d4,e8)
      call mvbits(a4,b4,c2,d4,e1)
      call mvbits(a4,b4,c2,d4,e2)
      call mvbits(a4,b4,c2,d4,e4)
      call mvbits(a4,b4,c2,d4,e8)
      call mvbits(a4,b4,c4,d4,e1)
      call mvbits(a4,b4,c4,d4,e2)
      call mvbits(a4,b4,c4,d4,e4)
      call mvbits(a4,b4,c4,d4,e8)
      call mvbits(a4,b4,c8,d4,e1)
      call mvbits(a4,b4,c8,d4,e2)
      call mvbits(a4,b4,c8,d4,e4)
      call mvbits(a4,b4,c8,d4,e8)
      call mvbits(a4,b8,c1,d4,e1)
      call mvbits(a4,b8,c1,d4,e2)
      call mvbits(a4,b8,c1,d4,e4)
      call mvbits(a4,b8,c1,d4,e8)
      call mvbits(a4,b8,c2,d4,e1)
      call mvbits(a4,b8,c2,d4,e2)
      call mvbits(a4,b8,c2,d4,e4)
      call mvbits(a4,b8,c2,d4,e8)
      call mvbits(a4,b8,c4,d4,e1)
      call mvbits(a4,b8,c4,d4,e2)
      call mvbits(a4,b8,c4,d4,e4)
      call mvbits(a4,b8,c4,d4,e8)
      call mvbits(a4,b8,c8,d4,e1)
      call mvbits(a4,b8,c8,d4,e2)
      call mvbits(a4,b8,c8,d4,e4)
      call mvbits(a4,b8,c8,d4,e8)

      call mvbits(a8,b1,c1,d8,e1)
      call mvbits(a8,b1,c1,d8,e2)
      call mvbits(a8,b1,c1,d8,e4)
      call mvbits(a8,b1,c1,d8,e8)
      call mvbits(a8,b1,c2,d8,e1)
      call mvbits(a8,b1,c2,d8,e2)
      call mvbits(a8,b1,c2,d8,e4)
      call mvbits(a8,b1,c2,d8,e8)
      call mvbits(a8,b1,c4,d8,e1)
      call mvbits(a8,b1,c4,d8,e2)
      call mvbits(a8,b1,c4,d8,e4)
      call mvbits(a8,b1,c4,d8,e8)
      call mvbits(a8,b1,c8,d8,e1)
      call mvbits(a8,b1,c8,d8,e2)
      call mvbits(a8,b1,c8,d8,e4)
      call mvbits(a8,b1,c8,d8,e8)
      call mvbits(a8,b2,c1,d8,e1)
      call mvbits(a8,b2,c1,d8,e2)
      call mvbits(a8,b2,c1,d8,e4)
      call mvbits(a8,b2,c1,d8,e8)
      call mvbits(a8,b2,c2,d8,e1)
      call mvbits(a8,b2,c2,d8,e2)
      call mvbits(a8,b2,c2,d8,e4)
      call mvbits(a8,b2,c2,d8,e8)
      call mvbits(a8,b2,c4,d8,e1)
      call mvbits(a8,b2,c4,d8,e2)
      call mvbits(a8,b2,c4,d8,e4)
      call mvbits(a8,b2,c4,d8,e8)
      call mvbits(a8,b2,c8,d8,e1)
      call mvbits(a8,b2,c8,d8,e2)
      call mvbits(a8,b2,c8,d8,e4)
      call mvbits(a8,b2,c8,d8,e8)
      call mvbits(a8,b4,c1,d8,e1)
      call mvbits(a8,b4,c1,d8,e2)
      call mvbits(a8,b4,c1,d8,e4)
      call mvbits(a8,b4,c1,d8,e8)
      call mvbits(a8,b4,c2,d8,e1)
      call mvbits(a8,b4,c2,d8,e2)
      call mvbits(a8,b4,c2,d8,e4)
      call mvbits(a8,b4,c2,d8,e8)
      call mvbits(a8,b4,c4,d8,e1)
      call mvbits(a8,b4,c4,d8,e2)
      call mvbits(a8,b4,c4,d8,e4)
      call mvbits(a8,b4,c4,d8,e8)
      call mvbits(a8,b4,c8,d8,e1)
      call mvbits(a8,b4,c8,d8,e2)
      call mvbits(a8,b4,c8,d8,e4)
      call mvbits(a8,b4,c8,d8,e8)
      call mvbits(a8,b8,c1,d8,e1)
      call mvbits(a8,b8,c1,d8,e2)
      call mvbits(a8,b8,c1,d8,e4)
      call mvbits(a8,b8,c1,d8,e8)
      call mvbits(a8,b8,c2,d8,e1)
      call mvbits(a8,b8,c2,d8,e2)
      call mvbits(a8,b8,c2,d8,e4)
      call mvbits(a8,b8,c2,d8,e8)
      call mvbits(a8,b8,c4,d8,e1)
      call mvbits(a8,b8,c4,d8,e2)
      call mvbits(a8,b8,c4,d8,e4)
      call mvbits(a8,b8,c4,d8,e8)
      call mvbits(a8,b8,c8,d8,e1)
      call mvbits(a8,b8,c8,d8,e2)
      call mvbits(a8,b8,c8,d8,e4)
      call mvbits(a8,b8,c8,d8,e8)

      end subroutine
